![spede] ~/phase0-yaminigonuguntla/01-hello-world {main *%=}
00:46:21 $ ls ~/phase0-yaminigonuguntla
01-hello-world	02-debugging  README.md
-[spede] ~/phase0-yaminigonuguntla/01-hello-world {main *%=}
00:50:57 $ cd ~/phase0-yaminigonuguntla
-[spede] ~/phase0-yaminigonuguntla {main *%=}
00:51:49 $ nano part3.txt
-[spede] ~/phase0-yaminigonuguntla {main *%=}
00:52:38 $ cd ~/phase0-yaminigonuguntla/02-debugging
-[spede] ~/phase0-yaminigonuguntla/02-debugging {main *%=}
00:55:26 $ ls
Makefile  src
-[spede] ~/phase0-yaminigonuguntla/02-debugging {main *%=}
00:55:28 $ nano src/main.c
-[spede] ~/phase0-yaminigonuguntla/02-debugging {main *%=}
01:01:46 $ make
Done linking "build/MyOS.dli" (with GDB enabled) at 1m.
-[spede] ~/phase0-yaminigonuguntla/02-debugging {main *%=}
01:02:02 $ spede-target
Launching SPEDE target to run in the background
-[spede] ~/phase0-yaminigonuguntla/02-debugging {main *%=}
01:02:18 $ spede-run -d
The SPEDE Target will be reset, are you sure? (y/n) y
Resetting the SPEDE Target...
Downloading image 'build/MyOS.dli' to SPEDE Target via /dev/pts/3...
File type is 'ELF'
Total blocks to download:  0x83  (128 bytes each)

Load Successful ; Code loaded at 0x0x101000 (841 bytes/sec)
Executing the image 'build/MyOS.dli' on the SPEDE Target with GDB Enabled
Launching GDB...
Reading symbols from build/MyOS.dli...
Expanding full symbols from build/MyOS.dli...
Remote debugging using /dev/pts/3
0x00102685 in breakpoint ()
Temporary breakpoint 1 at 0x101208: file src/main.c, line 38.

Temporary breakpoint 1, main () at src/main.c:38
38	    char buf[128] = {0};
SPEDE GDB$ c
Continuing.
Hello, world!
Welcome to MyOS!
NULL pointer!
The buffer size is 17 bytes
NULL pointer!
CPE/CSC 159 for Spring/Fall 1970 will be fun!
[Inferior 1 (Remote target) exited normally]
SPEDE GDB$ quit
-[spede] ~/phase0-yaminigonuguntla/02-debugging {main *%=}
01:11:21 $ script -q ../part4.txt
-[spede] ~/phase0-yaminigonuguntla/02-debugging {main *%=}
01:13:43 $ make
Done linking "build/MyOS.dli" (with GDB enabled) at 1m.
-[spede] ~/phase0-yaminigonuguntla/02-debugging {main *%=}
01:13:51 $ spede-target
Error: The SPEDE Target is already running and can't be started again with the same socket
![spede] ~/phase0-yaminigonuguntla/02-debugging {main *%=}
01:14:07 $ spede-target
Launching SPEDE target to run in the background
-[spede] ~/phase0-yaminigonuguntla/02-debugging {main *%=}
01:14:20 $ clip < ~/.s
-[spede] ~/phase0-yaminigonuguntla/02-debugging {main *%=}
01:15:28 $ spede-run -d
The SPEDE Target will be reset, are you sure? (y/n) y
Resetting the SPEDE Target...
Downloading image 'build/MyOS.dli' to SPEDE Target via /dev/pts/3...
File type is 'ELF'
Total blocks to download:  0x83  (128 bytes each)

Load Successful ; Code loaded at 0x0x101000 (1870 bytes/sec)
Executing the image 'build/MyOS.dli' on the SPEDE Target with GDB Enabled
Launching GDB...
Reading symbols from build/MyOS.dli...
Expanding full symbols from build/MyOS.dli...
Remote debugging using /dev/pts/3
0x00102685 in breakpoint ()
Temporary breakpoint 1 at 0x101208: file src/main.c, line 38.

Temporary breakpoint 1, main () at src/main.c:38
38	    char buf[128] = {0};
SPEDE GDB$ break puts
Breakpoint 2 at 0x10119d: file src/main.c, line 22.
SPEDE GDB$ info puts
Undefined info command: "puts".  Try "help info".
SPEDE GDB$ info break
Num     Type           Disp Enb Address    What
2       breakpoint     keep y   0x0010119d in puts at src/main.c:22
SPEDE GDB$ c
Continuing.
Hello, world!
Welcome to MyOS!

Breakpoint 2, puts (str=0x10422f "Hello, World!\n") at src/main.c:22
22	    if (str) {
SPEDE GDB$ list
17	/**
18	 * Prints a string to the screen starting at 0, 0
19	 * @param str pointer to the string to print
20	 */
21	void puts(char *str) {
22	    if (str) {
23	        printf("NULL pointer!\n");
24	        return;
25	    }
26	
SPEDE GDB$ print str
$1 = 0x10422f "Hello, World!\n"
SPEDE GDB$ step
23	        printf("NULL pointer!\n");
SPEDE GDB$ step
NULL pointer!
24	        return;
SPEDE GDB$ c
Continuing.
The buffer size is 17 bytes

Breakpoint 2, puts (str=0x10dfc "welcome to MyOS!\n") at src/main.c:22
22	    if (str) {
SPEDE GDB$ jump +3
Continuing at 0x1011b5.
CPE/CSC 159 for Spring/Fall 1970 will be fun!
[Inferior 1 (Remote target) exited normally]
SPEDE GDB$ Quit
SPEDE GDB$ quit
-[spede] ~/phase0-yaminigonuguntla/02-debugging {main *%=}
01:26:35 $ nano src/main.c
-[spede] ~/phase0-yaminigonuguntla/02-debugging {main *%=}
01:30:06 $ makee

Command 'makee' not found, did you mean:

  command 'makeg' from deb xutils-dev (1:7.7+5ubuntu2)
  command 'make' from deb make (4.2.1-1.2)
  command 'make' from deb make-guile (4.2.1-1.2)

Try: sudo apt install <deb name>

![spede] ~/phase0-yaminigonuguntla/02-debugging {main *%=}
01:30:33 $ make
Done linking "build/MyOS.dli" (with GDB enabled) at 1m.
-[spede] ~/phase0-yaminigonuguntla/02-debugging {main *%=}
01:30:48 $ spede-run -d
The SPEDE Target will be reset, are you sure? (y/n) y
Resetting the SPEDE Target...
Downloading image 'build/MyOS.dli' to SPEDE Target via /dev/pts/3...
File type is 'ELF'
Total blocks to download:  0x83  (128 bytes each)

Load Successful ; Code loaded at 0x0x101000 (1122 bytes/sec)
Executing the image 'build/MyOS.dli' on the SPEDE Target with GDB Enabled
Launching GDB...
Reading symbols from build/MyOS.dli...
Expanding full symbols from build/MyOS.dli...
Remote debugging using /dev/pts/3
0x00102685 in breakpoint ()
Temporary breakpoint 1 at 0x101208: file src/main.c, line 38.

Temporary breakpoint 1, main () at src/main.c:38
38	    char buf[128] = {0};
SPEDE GDB$ c
Continuing.
Hello, world!
Welcome to MyOS!
The buffer size is 17 bytes
CPE/CSC 159 for Spring/Fall 1970 will be fun!
[Inferior 1 (Remote target) exited normally]
SPEDE GDB$ break strlen
Breakpoint 2 at 0x101178: file src/main.c, line 10.
SPEDE GDB$ info break
Num     Type           Disp Enb Address    What
2       breakpoint     keep y   0x00101178 in strlen at src/main.c:10
SPEDE GDB$ c
The program is not being run.
SPEDE GDB$ c
The program is not being run.
SPEDE GDB$ backtrace
No stack.
SPEDE GDB$ info args
No frame selected.
SPEDE GDB$ quit
-[spede] ~/phase0-yaminigonuguntla/02-debugging {main *%=}
01:35:19 $ spede-run -d
Socket './spede.sock' does not exist. Exiting...
![spede] ~/phase0-yaminigonuguntla/02-debugging {main *%=}
01:35:41 $ ^C
![spede] ~/phase0-yaminigonuguntla/02-debugging {main *%=}
01:36:03 $ spede-target
Launching SPEDE target to run in the background
-[spede] ~/phase0-yaminigonuguntla/02-debugging {main *%=}
01:37:12 $ spede-run -d
The SPEDE Target will be reset, are you sure? (y/n) y
Resetting the SPEDE Target...
Downloading image 'build/MyOS.dli' to SPEDE Target via /dev/pts/3...
File type is 'ELF'
Total blocks to download:  0x83  (128 bytes each)

Load Successful ; Code loaded at 0x0x101000 (1683 bytes/sec)
Executing the image 'build/MyOS.dli' on the SPEDE Target with GDB Enabled
Launching GDB...
Reading symbols from build/MyOS.dli...
Expanding full symbols from build/MyOS.dli...
Remote debugging using /dev/pts/3
warning: unrecognized item "S05" in "qSupported" response
^Z
[1]+  Stopped                 spede-run -d
![spede] ~/phase0-yaminigonuguntla/02-debugging {main *%=}
01:39:04 $ spede-run -d
The SPEDE Target will be reset, are you sure? (y/n) y
Resetting the SPEDE Target...
Downloading image 'build/MyOS.dli' to SPEDE Target via /dev/pts/3...
File type is 'ELF'
Total blocks to download:  0x83  (128 bytes each)

Load Successful ; Code loaded at 0x0x101000 (2104 bytes/sec)
Executing the image 'build/MyOS.dli' on the SPEDE Target with GDB Enabled
Launching GDB...
Reading symbols from build/MyOS.dli...
Expanding full symbols from build/MyOS.dli...
Remote debugging using /dev/pts/3
0x00102685 in breakpoint ()
Temporary breakpoint 1 at 0x101208: file src/main.c, line 38.

Temporary breakpoint 1, main () at src/main.c:38
38	    char buf[128] = {0};
SPEDE GDB$ break strlen
Breakpoint 2 at 0x101178: file src/main.c, line 10.
SPEDE GDB$ info break
Num     Type           Disp Enb Address    What
2       breakpoint     keep y   0x00101178 in strlen at src/main.c:10
SPEDE GDB$ break strlen
Note: breakpoint 2 also set at pc 0x101178.
Breakpoint 3 at 0x101178: file src/main.c, line 10.
SPEDE GDB$ c
Continuing.
Hello, world!
Welcome to MyOS!

Breakpoint 2, strlen (str=0x10422f "Hello, World!\n") at src/main.c:10
10	    int n = 0;
SPEDE GDB$ backtrace
#0  strlen (str=0x10422f "Hello, World!\n") at src/main.c:10
#1  0x001011c0 in puts (str=0x10422f "Hello, World!\n") at src/main.c:27
#2  0x00101267 in main () at src/main.c:46
SPEDE GDB$ info args
str = 0x10422f "Hello, World!\n"
SPEDE GDB$ info break
Num     Type           Disp Enb Address    What
2       breakpoint     keep y   0x00101178 in strlen at src/main.c:10
	breakpoint already hit 1 time
3       breakpoint     keep y   0x00101178 in strlen at src/main.c:10
	breakpoint already hit 1 time
SPEDE GDB$ delete 2
SPEDE GDB$ info break
Num     Type           Disp Enb Address    What
3       breakpoint     keep y   0x00101178 in strlen at src/main.c:10
	breakpoint already hit 1 time
SPEDE GDB$ delete 3
SPEDE GDB$ info break
No breakpoints or watchpoints.
SPEDE GDB$ quit
-[spede] ~/phase0-yaminigonuguntla/02-debugging {main *%=}
01:49:42 $ nano src/main.c
-[spede] ~/phase0-yaminigonuguntla/02-debugging {main *%=}
01:53:25 $ spede-run -d
The SPEDE Target will be reset, are you sure? (y/n) ^Z
[2]+  Stopped                 spede-run -d
![spede] ~/phase0-yaminigonuguntla/02-debugging {main *%=}
01:56:29 $ nano src/main.c


Use "fg" to return to nano.

[3]+  Stopped                 nano src/main.c
![spede] ~/phase0-yaminigonuguntla/02-debugging {main *%=}
01:57:07 $ nano src/main.c


Use "fg" to return to nano.

[4]+  Stopped                 nano src/main.c
![spede] ~/phase0-yaminigonuguntla/02-debugging {main *%=}
01:58:25 $ nano src/main.c
-[spede] ~/phase0-yaminigonuguntla/02-debugging {main *%=}
02:00:50 $ makke

Command 'makke' not found, did you mean:

  command 'make' from deb make (4.2.1-1.2)
  command 'make' from deb make-guile (4.2.1-1.2)

Try: sudo apt install <deb name>

![spede] ~/phase0-yaminigonuguntla/02-debugging {main *%=}
02:01:15 $ make
Done linking "build/MyOS.dli" (with GDB enabled) at 1m.
-[spede] ~/phase0-yaminigonuguntla/02-debugging {main *%=}
02:01:26 $ spede-target -q
The SPEDE Target has quit. Exiting...
-[spede] ~/phase0-yaminigonuguntla/02-debugging {main *%=}
02:02:15 $ spede-target
Launching SPEDE target to run in the background
-[spede] ~/phase0-yaminigonuguntla/02-debugging {main *%=}
02:02:30 $ spede-target -d
spede-target: option requires an argument -- 'd'

Usage: spede-target [options]

Options:
  -d | --display     Specifies which type of display to support:
                       vnc:     Creates a VNC server
                       console: Outputs to the current terminal/console
                       default: Opens a window in the current desktop session

  -m | --monitor     Enables the QEMU monitor via standard input/output
                       console: Opens the monitor on the current terminal/console
                       socket:  Opens the monitor on a socket
                       default: none

  -s | --socket      Specifies the control socket location for other scripts
                     or programs to communicate with the QEMU session
                       default: ./spede.sock

  -l | --logfile     Specifies the log file location
                       default: /dev/null

  -i | --image       Specifies the SPEDE Target image to execute (not .dli)

  -q | --quit        Quits the SPEDE Target

  -k | --kill        Kills all spede target processes that can be found and exits

The SPEDE Target will run the background unless one of the following options
are specified:
  --monitor console
  --display term

If both '--monitor console' and '--display term' are configured, '--display'
will be reset to default

![spede] ~/phase0-yaminigonuguntla/02-debugging {main *%=}
02:02:51 $ spede-run -d
The SPEDE Target will be reset, are you sure? (y/n) y
Resetting the SPEDE Target...
Downloading image 'build/MyOS.dli' to SPEDE Target via /dev/pts/4...
File type is 'ELF'
Total blocks to download:  0x83  (128 bytes each)

Load Successful ; Code loaded at 0x0x101000 (1870 bytes/sec)
Executing the image 'build/MyOS.dli' on the SPEDE Target with GDB Enabled
Launching GDB...
Reading symbols from build/MyOS.dli...
Expanding full symbols from build/MyOS.dli...
Remote debugging using /dev/pts/4
0x00102685 in breakpoint ()
Temporary breakpoint 1 at 0x101208: file src/main.c, line 37.

Temporary breakpoint 1, main () at src/main.c:37
37	    char buf[128] = {0};
SPEDE GDB$ info break
No breakpoints or watchpoints.
SPEDE GDB$ break strlen
Breakpoint 2 at 0x101178: file src/main.c, line 10.
SPEDE GDB$ run
Hello, world!
Welcome to MyOS!

Breakpoint 2, strlen (str=0x10422f "Hello, World!\n") at src/main.c:10
10	    int n = 0;
SPEDE GDB$ backtrace
#0  strlen (str=0x10422f "Hello, World!\n") at src/main.c:10
#1  0x001011c0 in puts (str=0x10422f "Hello, World!\n") at src/main.c:26
#2  0x00101267 in main () at src/main.c:45
SPEDE GDB$ info args
str = 0x10422f "Hello, World!\n"
SPEDE GDB$ delete 1
No breakpoint number 1.
SPEDE GDB$ info break
Num     Type           Disp Enb Address    What
2       breakpoint     keep y   0x00101178 in strlen at src/main.c:10
	breakpoint already hit 1 time
SPEDE GDB$ delete 2
SPEDE GDB$ info break
No breakpoints or watchpoints.
SPEDE GDB$ break main.c:55
No line 55 in file "main.c".
SPEDE GDB$ puts(buf);
Undefined command: "puts".  Try "help".
SPEDE GDB$ forward-sforward-search "puts(buf)"
Expression not found
SPEDE GDB$ forward-sforward-search "puts(buf)"
Expression not found
SPEDE GDB$ forward-search "puts(buf)"
Expression not found
SPEDE GDB$ lis 40,70
40	    *((char *) 0xB8000) = 'A';
41	
42	    printf("Hello, world!\n");
43	    printf("Welcome to %s!\n", OS_NAME);
44	
45	    puts("Hello, World!\n");
46	
47	    snprintf(buf, sizeof(buf), "welcome to %s!\n", OS_NAME);
48	    printf("The buffer size is %d bytes\n", strlen(buf));
49	    puts(buf);
50	
51	    printf("CPE/CSC 159 for Spring/Fall %d will be fun!\n", year);
52	}
SPEDE GDB$ list 30,55
30	    }
31	}
32	
33	/**
34	 * Main function
35	 */
36	void main(void) {
37	    char buf[128] = {0};
38	    int year = 1970;
39	
40	    *((char *) 0xB8000) = 'A';
41	
42	    printf("Hello, world!\n");
43	    printf("Welcome to %s!\n", OS_NAME);
44	
45	    puts("Hello, World!\n");
46	
47	    snprintf(buf, sizeof(buf), "welcome to %s!\n", OS_NAME);
48	    printf("The buffer size is %d bytes\n", strlen(buf));
49	    puts(buf);
50	
51	    printf("CPE/CSC 159 for Spring/Fall %d will be fun!\n", year);
52	}
SPEDE GDB$ Quit
SPEDE GDB$ break src/main.c:49
Breakpoint 3 at 0x1012ab: file src/main.c, line 49.
SPEDE GDB$ break src/main.c:51
Breakpoint 4 at 0x1012bd: file src/main.c, line 51.
SPEDE GDB$ c
Continuing.
The buffer size is 17 bytes

Breakpoint 3, main () at src/main.c:49
49	    puts(buf);
SPEDE GDB$ print buf
$1 = "welcome to MyOS!\n", '\000' <repeats 110 times>
SPEDE GDB$ info break
Num     Type           Disp Enb Address    What
3       breakpoint     keep y   0x001012ab in main at src/main.c:49
	breakpoint already hit 1 time
4       breakpoint     keep y   0x001012bd in main at src/main.c:51
SPEDE GDB$ c
Continuing.

Breakpoint 4, main () at src/main.c:51
51	    printf("CPE/CSC 159 for Spring/Fall %d will be fun!\n", year);
SPEDE GDB$ list 30,55
30	    }
31	}
32	
33	/**
34	 * Main function
35	 */
36	void main(void) {
37	    char buf[128] = {0};
38	    int year = 1970;
39	
40	    *((char *) 0xB8000) = 'A';
41	
42	    printf("Hello, world!\n");
43	    printf("Welcome to %s!\n", OS_NAME);
44	
45	    puts("Hello, World!\n");
46	
47	    snprintf(buf, sizeof(buf), "welcome to %s!\n", OS_NAME);
48	    printf("The buffer size is %d bytes\n", strlen(buf));
49	    puts(buf);
50	
51	    printf("CPE/CSC 159 for Spring/Fall %d will be fun!\n", year);
52	}
SPEDE GDB$ break src/main.c:49
Note: breakpoint 3 also set at pc 0x1012ab.
Breakpoint 5 at 0x1012ab: file src/main.c, line 49.
SPEDE GDB$ break src/main.c:51
Note: breakpoint 4 also set at pc 0x1012bd.
Breakpoint 6 at 0x1012bd: file src/main.c, line 51.
SPEDE GDB$ info break
Num     Type           Disp Enb Address    What
3       breakpoint     keep y   0x001012ab in main at src/main.c:49
	breakpoint already hit 1 time
4       breakpoint     keep y   0x001012bd in main at src/main.c:51
	breakpoint already hit 1 time
5       breakpoint     keep y   0x001012ab in main at src/main.c:49
6       breakpoint     keep y   0x001012bd in main at src/main.c:51
SPEDE GDB$ delete 5
SPEDE GDB$ delete 6
SPEDE GDB$ info break
Num     Type           Disp Enb Address    What
3       breakpoint     keep y   0x001012ab in main at src/main.c:49
	breakpoint already hit 1 time
4       breakpoint     keep y   0x001012bd in main at src/main.c:51
	breakpoint already hit 1 time
SPEDE GDB$ c
Continuing.
CPE/CSC 159 for Spring/Fall 1970 will be fun!
[Inferior 1 (Remote target) exited normally]
SPEDE GDB$ print buf
No symbol "buf" in current context.
SPEDE GDB$ delete 5
No breakpoint number 5.
SPEDE GDB$ delete 3
SPEDE GDB$ delete 4
SPEDE GDB$ info break
No breakpoints or watchpoints.
SPEDE GDB$ break src/main.c:49
Breakpoint 7 at 0x1012ab: file src/main.c, line 49.
SPEDE GDB$ break src/main.c:51
Breakpoint 8 at 0x1012bd: file src/main.c, line 51.
SPEDE GDB$ info break
Num     Type           Disp Enb Address    What
7       breakpoint     keep y   0x001012ab in main at src/main.c:49
8       breakpoint     keep y   0x001012bd in main at src/main.c:51
SPEDE GDB$ c
The program is not being run.
SPEDE GDB$ quit
-[spede] ~/phase0-yaminigonuguntla/02-debugging {main *%=}
02:32:43 $ make
Done linking "build/MyOS.dli" (with GDB enabled) at 1m.
-[spede] ~/phase0-yaminigonuguntla/02-debugging {main *%=}
02:34:20 $ spede-target -q
The SPEDE Target is not running
-[spede] ~/phase0-yaminigonuguntla/02-debugging {main *%=}
02:34:34 $ spede-target
Launching SPEDE target to run in the background
-[spede] ~/phase0-yaminigonuguntla/02-debugging {main *%=}
02:34:52 $ spede-run -d
The SPEDE Target will be reset, are you sure? (y/n) y
Resetting the SPEDE Target...
Downloading image 'build/MyOS.dli' to SPEDE Target via /dev/pts/4...
File type is 'ELF'
Total blocks to download:  0x83  (128 bytes each)

Load Successful ; Code loaded at 0x0x101000 (1402 bytes/sec)
Executing the image 'build/MyOS.dli' on the SPEDE Target with GDB Enabled
Launching GDB...
Reading symbols from build/MyOS.dli...
Expanding full symbols from build/MyOS.dli...
Remote debugging using /dev/pts/4
0x00102685 in breakpoint ()
Temporary breakpoint 1 at 0x101208: file src/main.c, line 37.

Temporary breakpoint 1, main () at src/main.c:37
37	    char buf[128] = {0};
SPEDE GDB$ break strlen
Breakpoint 2 at 0x101178: file src/main.c, line 10.
SPEDE GDB$ run
Hello, world!
Welcome to MyOS!

Breakpoint 2, strlen (str=0x10422f "Hello, World!\n") at src/main.c:10
10	    int n = 0;
SPEDE GDB$ backtrace
#0  strlen (str=0x10422f "Hello, World!\n") at src/main.c:10
#1  0x001011c0 in puts (str=0x10422f "Hello, World!\n") at src/main.c:26
#2  0x00101267 in main () at src/main.c:45
SPEDE GDB$ info args
str = 0x10422f "Hello, World!\n"
SPEDE GDB$ info break
Num     Type           Disp Enb Address    What
2       breakpoint     keep y   0x00101178 in strlen at src/main.c:10
	breakpoint already hit 1 time
SPEDE GDB$ delete 2
SPEDE GDB$ info break
No breakpoints or watchpoints.
SPEDE GDB$ list 30,55
30	    }
31	}
32	
33	/**
34	 * Main function
35	 */
36	void main(void) {
37	    char buf[128] = {0};
38	    int year = 1970;
39	
40	    *((char *) 0xB8000) = 'A';
41	
42	    printf("Hello, world!\n");
43	    printf("Welcome to %s!\n", OS_NAME);
44	
45	    puts("Hello, World!\n");
46	
47	    snprintf(buf, sizeof(buf), "welcome to %s!\n", OS_NAME);
48	    printf("The buffer size is %d bytes\n", strlen(buf));
49	    puts(buf);
50	
51	    printf("CPE/CSC 159 for Spring/Fall %d will be fun!\n", year);
52	}
SPEDE GDB$ break main.c:49
Breakpoint 3 at 0x1012ab: file src/main.c, line 49.
SPEDE GDB$ break main.c:51
Breakpoint 4 at 0x1012bd: file src/main.c, line 51.
SPEDE GDB$ info break
Num     Type           Disp Enb Address    What
3       breakpoint     keep y   0x001012ab in main at src/main.c:49
4       breakpoint     keep y   0x001012bd in main at src/main.c:51
SPEDE GDB$ c
Continuing.
The buffer size is 17 bytes

Breakpoint 3, main () at src/main.c:49
49	    puts(buf);
SPEDE GDB$ print buf
$1 = "welcome to MyOS!\n", '\000' <repeats 110 times>
SPEDE GDB$ set buf[0] = 'W'
SPEDE GDB$ print buf
$2 = "Welcome to MyOS!\n", '\000' <repeats 110 times>
SPEDE GDB$ c
Continuing.

Breakpoint 4, main () at src/main.c:51
51	    printf("CPE/CSC 159 for Spring/Fall %d will be fun!\n", year);
SPEDE GDB$ print year
$3 = 0x7b2
SPEDE GDB$ print /d year
$4 = 1970
SPEDE GDB$ set year=2025
SPEDE GDB$ print /d year
$5 = 8229
SPEDE GDB$ print year
$6 = 0x2025
SPEDE GDB$ set year=2025
SPEDE GDB$ print /d year
$7 = 8229
SPEDE GDB$ set year = 2025
SPEDE GDB$ print /d year
$8 = 8229
SPEDE GDB$ set year = 2025.
SPEDE GDB$ print /d year
$9 = 2025
SPEDE GDB$ c
Continuing.
CPE/CSC 159 for Spring/Fall 2025 will be fun!
[Inferior 1 (Remote target) exited normally]
SPEDE GDB$
